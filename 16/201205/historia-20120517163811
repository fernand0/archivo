No digas que eres programador
Mucha gente en Linkedin ya lo sabe: para qué decir que eres un empleado o que eres autónomo cuando puedes inventarte una sección de la que ser jefe o decir que eres CEO de tu empresa (y dejar de lado, discretamente, que también eres el botones, el 'vepor' y lo que haga falta porque estás solo).  

El otro día en alguna parte hablábamos de cómo muchos programadores se sienten a gusto siéndolo y desarrollando cosas chulas y les cuesta pasar a los temas de gestión. Sin embargo, las empresas les presionan para que pasen a dirigir a otros informáticos y a evolucionar en el 'escalafón'.  Tengo mis dudas sobre cuál es la apuesta adecuada porque un buen desarrollador (en la línea de lo que dice más abajo, claro: no sólo programa sino que se implica en temas más de negocio) debería poder tener una carrera sin pasar a labores comerciales o de gestión.  Pero también es cierto que si los gestores saben más de lo que tienen entre manos, seguramente desarrollarán productos mejores y más adecuados a lo que necesitan los clientes, y a lo que se puede hacer.

En el mundo de la informática casi pasa al revés: mucha gente dice que son programadores cuando, tal vez, deberían transmitir el valor que crean de otras formas (también hay creatividades en esto, no se crean).

Esa es la idea que nos transmite <a href="http://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer/">Don't Call Yourself A Programmer, And Other Career Advice</a>.  

<blockquote>
Engineers are hired to create business value, not to program things: Businesses do things for irrational and political reasons all the time (see below), but in the main they converge on doing things which increase revenue or reduce costs.  Status in well-run businesses generally is awarded to people who successfully take credit for doing one of these things.  (That can, but does not necessarily, entail actually doing them.) The person who has decided to bring on one more engineer is not doing it because they love having a geek around the room, they are doing it because adding the geek allows them to complete a project (or projects) which will add revenue or decrease costs.  Producing beautiful software is not a goal.  Solving complex technical problems is not a goal.  Writing bug-free code is not a goal.  Using sexy programming languages is not a goal.  Add revenue.  Reduce costs.  Those are your only goals.  
</blockquote>

Sobre el futuro de nuestro puesto de trabajo, nadie envía a otra parte los centros que producen beneficios:

<blockquote>
Nobody ever outsources Profit Centers.  Attempting to do so would be the setup for MBA humor.  It's like suggesting replacing your source control system with a bunch of copies maintained on floppy disks.
</blockquote>

Sobre las tecnologías:

<blockquote>
Do Java programmers make more money than .NET programmers?  Anyone describing themselves as either a Java programmer or .NET programmer has already lost, because a) they're a programmer (you're not, see above) and b) they're making themselves non-hireable for most programming jobs.  In the real world, picking up a new language takes a few weeks of effort and after 6 to 12 months nobody will ever notice you haven't been doing that one for your entire career.  I did back-end Big Freaking Java Web Application development as recently as March 2010.  Trust me, nobody cares about that.  If a Python shop was looking for somebody technical to make them a pile of money, the fact that I've never written a line of Python would not get held against me.
</blockquote>

Y más, el talento:

<blockquote>
Talented engineers are rare -- vastly rarer than opportunities to use them -- and it is a seller's market for talent right now in almost every facet of the field.  Everybody at Matasano uses Ruby.  If you don't, but are a good engineer, they'll hire you anyway.  (A good engineer has a track record of -- repeat after me -- increasing revenue or decreasing costs.) Much of Fog Creek uses the Microsoft Stack.  I can't even spell ASP.NET and they'd still hire me.
</blockquote>

Y, finalmente, juntando todo: no hablar de lo que sabes hacer o de las tecnologías concretas, sino de los logros que has conseguido para las empresas y proyectos  en los que has trabajado:

<blockquote>
These days if you ask me how good of a programmer I am I will start telling you stories about how I have programmed systems which helped millions of kids learn to read or which provably made companies millions.  The question of where I am on the bell curve matters to no one, so why bother worrying about it?)
</blockquote>

<p class="tags">Etiquetas: <a href="http://delicious.com/fernand0/rei+programadores" rel="tag">programadores</a>, <a href="http://delicious.com/fernand0/rei+informáticos" rel="tag">informáticos</a>, <a href="http://delicious.com/fernand0/rei+ingenieros" rel="tag">ingenieros</a>, <a href="http://delicious.com/fernand0/rei+empleo" rel="tag">empleo</a>, <a href="http://delicious.com/fernand0/rei+trabajo" rel="tag">trabajo</a>, <a href="http://delicious.com/fernand0/rei+descripciones" rel="tag">descripciones</a>, <a href="http://delicious.com/fernand0/rei+gente" rel="tag">gente</a>, <a href="http://delicious.com/fernand0/rei+pero" rel="tag">pero</a>, <a href="http://delicious.com/fernand0/rei+esto" rel="tag">esto</a>, <a href="http://delicious.com/fernand0/rei+le" rel="tag">le</a>, <a href="http://delicious.com/fernand0/rei+importa" rel="tag">importa</a>, <a href="http://delicious.com/fernand0/rei+a" rel="tag">a</a>, <a href="http://delicious.com/fernand0/rei+alguien" rel="tag">alguien</a>, <a href="http://delicious.com/fernand0/rei+?" rel="tag">?</a></p>
 Dónde:Reflexiones e irreflexiones
 URL:http://fernand0//historias/71836
