¿Debemos enseñar a los niños a programar?
En esa línea va <a href="http://pozorvlak.livejournal.com/169225.html">Why we should teach our kids to code</a>:


Sobre como aprendió (aprendimos?) mucha gente y las dificultades de lsa herramientas actuales, compensadas con el trabajo de algunos proyectos:

<blockquote>
I don't know any programmers who weren't at least partly self-taught.  Today's proto-hackers don't have the easily-programmable 8-bit micros that programmers of my generation cut their teeth on, but they've got something much better: a full open-source software stack whose source they can read, resources like <a href="http://projecteuler.net/">Project Euler</a> and <a href="http://hackety-hack.com/">Hackety Hack</a> to help them take their first steps, and a huge community of open-source hackers to learn from.  
</blockquote>

Y la justificación:

<blockquote>
Yes, we need some people who know how to instruct the machines if we want to have a viable economy. But the real point is that we currently live in a pre-algorate society. People who object that "Kids no more need to know how to code than they need to know car maintenance or how to build a table - useful for some, pointless for the majority" (a quote from one of JGC's commenters) are missing this point entirely.  Computers are not like cars. Cars have a well-defined purpose, for which they have been ruthlessly optimised. Computers are more like writing.  Writing is a means for expressing and conveying ideas (and here's the key bit: any ideas); computers are machines for executing instructions (and here's the key bit: any instructions).
</blockquote>

O sea, las computadoras no son herramientas con un propósito definido y ya está, como los coches, pueden hacer muchas cosas. En ese sentido, conocerlos bien puede abrirnos las puertas a ser capaces de llevar adelante nuestras ideas mucho mejor.

Ya habíamos hablado de temas similares en <a href="http://fernand0.blogalia.com/historias/65823">Hacen falta más gente que sepa informática</a> y en <a href="http://fernand0.blogalia.com/historias/70112">Web 2.0 y educación ¿repitiendo errores?</a> (cuidado, no estamos hablando sólo de darles un ordenador a los niños o de enseñarles ofimática; ni de que tengan una bitácora, que mola, pero no es bastante).

Hablamos de lo que hablan en <a href="http://osluz.unizar.es/node/376">Talleres de aplicaciones de software libre para el colegio</a> (Scratch, arduino...) o en <a href="http://osl.ugr.es/2011/11/14/creando-cantera-el-software-libre-contado-a-los-ninos/">Creando cantera: el software libre contado a los niños</a> (Scratch, Python, Ruby...).

<a href="http://fernand0.blogalia.com/historias/63233">Pensamiento computacional</a>.

<p class="tags">Etiquetas: <a href="http://delicious.com/fernand0/rei+niños" rel="tag">niños</a>, <a href="http://delicious.com/fernand0/rei+informática" rel="tag">informática</a>, <a href="http://delicious.com/fernand0/rei+programación" rel="tag">programación</a>, <a href="http://delicious.com/fernand0/rei+computación" rel="tag">computación</a>, <a href="http://delicious.com/fernand0/rei+pensamiento" rel="tag">pensamiento</a>, <a href="http://delicious.com/fernand0/rei+computacional" rel="tag">computacional</a>, <a href="http://delicious.com/fernand0/rei+enseñanza" rel="tag">enseñanza</a>, <a href="http://delicious.com/fernand0/rei+aprendizaje" rel="tag">aprendizaje</a>, <a href="http://delicious.com/fernand0/rei+colegio" rel="tag">colegio</a>, <a href="http://delicious.com/fernand0/rei+escuela" rel="tag">escuela</a></p>
 Dónde:Reflexiones e irreflexiones
 URL:http://fernand0//historias/70766
